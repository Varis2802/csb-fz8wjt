{"version":3,"sources":["data.js","App.js","index.js"],"names":["data","name","children","svgSquare","shape","shapeProps","x","y","height","width","innerHeight","window","innerWidth","NodeLabel","node","nodeData","hasChildren","btnStyle","background","cursor","React","createElement","className","style","App","treeContainer","useRef","tree","_useState","useState","_useState2","_slicedToArray","dimensions","setDimensions","_useState3","_useState4","translate","setTranslate","useEffect","current","getBoundingClientRect","console","log","id","ref","Tree","nodeSvgShape","orientation","allowForeignObjects","nodeLabelComponent","render","foreignObjectWrapper","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"6NAmCeA,EAnCF,CACX,CACEC,KAAM,YACNC,SAAU,CACR,CACED,KAAM,aACNC,SAAU,CACR,CAAED,KAAM,eACR,CAAEA,KAAM,cACR,CAAEA,KAAM,cACR,CAAEA,KAAM,gBAGZ,CACEA,KAAM,aACNC,SAAU,CACR,CAAED,KAAM,eACR,CACEA,KAAM,aACNC,SAAU,CACR,CAAED,KAAM,eACR,CAAEA,KAAM,eACR,CAAEA,KAAM,eACR,CACEA,KAAM,cACNC,SAAU,CAAC,CAAED,KAAM,gBAAkB,CAAEA,KAAM,yBClBvDE,EAAY,CAChBC,MAAO,OACPC,WAAY,CACVC,GAAI,GACJC,GAAI,GACJC,OAAQ,GACRC,MAAO,KAILC,EAAcC,OAAOD,YACrBE,EAAaD,OAAOC,WAE1B,SAASC,EAAUC,GACjB,IAAQC,EAAaD,EAAbC,SACFC,EAAcD,EAASb,SACvBe,EAAW,CACfC,WAAYF,EAAc,UAAY,GACtCG,OAAQH,EAAc,UAAY,WAEpC,OACEI,IAAAC,cAAA,UAAQC,UAAU,MAAMC,MAAON,GAC5BF,EAASd,MAKD,SAASuB,IACtB,IAAMC,EAAgBC,mBAChBC,EAAOD,mBAEbE,EAAoCC,mBAAS,CAC3CpB,MAAOG,EACPJ,OAAQE,IACRoB,EAAAC,YAAAH,EAAA,GAHKI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAIhCI,EAAkCL,mBAAS,CAAEvB,EAAG,EAAGC,EAAG,IAAI4B,EAAAJ,YAAAG,EAAA,GAAnDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAkB9B,OAhBAG,oBAAU,WACJb,EAAcc,SAChBN,EAAcR,EAAcc,QAAQC,0BAErC,CAACf,IAEJa,oBAAU,WACRG,QAAQC,IAAIV,GACZK,EAAa,CACX/B,EAAG0B,EAAWvB,MAAQ,EACtBF,EAAGyB,EAAWxB,OAAS,EAAI,KAE5B,CAACwB,IAEJS,QAAQC,IAAI,OAAQf,GAGlBP,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OACEsB,GAAG,cACHC,IAAKnB,EACLF,MAAO,CAAEd,MAAOG,EAAYJ,OAAQE,IAEpCU,IAAAC,cAACwB,IAAI,CACH7C,KAAMA,EACN4C,IAAKjB,EACLS,UAAWA,EAEXU,aAAc3C,EACdoB,MAAO,CAAEf,OAAQ,QAASC,MAAO,SACjCsC,YAAY,aACZC,qBAAmB,EACnBC,mBAAoB,CAClBC,OAAQ9B,IAAAC,cAACR,EAAS,CAACS,UAAU,0BAC7B6B,qBAAsB,CACpB5C,GAAI,GACJD,GAAI,SC3ElB,IAAM8C,EAAcC,SAASC,eAAe,QAC5CC,IAASL,OACP9B,IAAAC,cAACD,IAAMoC,WAAU,KACfpC,IAAAC,cAACG,EAAG,OAEN4B","file":"static/js/main.65fe6533.chunk.js","sourcesContent":["const data = [\n  {\n    name: \"Top Level\",\n    children: [\n      {\n        name: \"Level 2: A\",\n        children: [\n          { name: \"Level 3A: A\" },\n          { name: \"Level 3A:B\" },\n          { name: \"Level 3A:C\" },\n          { name: \"Level 3A:D\" }\n        ]\n      },\n      {\n        name: \"Level 2: B\",\n        children: [\n          { name: \"Level 3B: A\" },\n          {\n            name: \"Level 3B:B\",\n            children: [\n              { name: \"Level 3BB:1\" },\n              { name: \"Level 3BB:2\" },\n              { name: \"Level 3BB:3\" },\n              {\n                name: \"Level 3BB:4\",\n                children: [{ name: \"Level 3BB4:1\" }, { name: \"Level 3BB4:2\" }]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\n\nexport default data;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\nimport Tree from \"react-d3-tree\";\n\nimport data from \"./data\";\n\nconst svgSquare = {\n  shape: \"node\",\n  shapeProps: {\n    x: -10,\n    y: -10,\n    height: 30,\n    width: 50\n  }\n};\n\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\n\nfunction NodeLabel(node) {\n  const { nodeData } = node;\n  const hasChildren = nodeData.children;\n  const btnStyle = {\n    background: hasChildren ? \"#03A9F4\" : \"\",\n    cursor: hasChildren ? \"pointer\" : \"default\"\n  };\n  return (\n    <button className=\"btn\" style={btnStyle}>\n      {nodeData.name}\n    </button>\n  );\n}\n\nexport default function App() {\n  const treeContainer = useRef();\n  const tree = useRef();\n\n  const [dimensions, setDimensions] = useState({\n    width: innerWidth,\n    height: innerHeight\n  });\n  const [translate, setTranslate] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (treeContainer.current) {\n      setDimensions(treeContainer.current.getBoundingClientRect());\n    }\n  }, [treeContainer]);\n\n  useEffect(() => {\n    console.log(dimensions);\n    setTranslate({\n      x: dimensions.width / 2,\n      y: dimensions.height / 2 / 2\n    });\n  }, [dimensions]);\n\n  console.log(\"tree\", tree);\n\n  return (\n    <div className=\"App\">\n      <div\n        id=\"treeWrapper\"\n        ref={treeContainer}\n        style={{ width: innerWidth, height: innerHeight }}\n      >\n        <Tree\n          data={data}\n          ref={tree}\n          translate={translate}\n          // zoom={0.5}\n          nodeSvgShape={svgSquare}\n          style={{ height: \"600px\", width: \"600px\" }}\n          orientation=\"horizontal\"\n          allowForeignObjects\n          nodeLabelComponent={{\n            render: <NodeLabel className=\"myLabelComponentInSvg\" />,\n            foreignObjectWrapper: {\n              y: -10,\n              x: -50\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}